{"version":3,"sources":["assets/img/2d.png","react-tile-render/sprite/index.jsx","react-tile-render/render/GameObjects.js","react-tile-render/render/RenderObjects.js","react-tile-render/map/index.jsx","react-tile-render/pallette/index.js","react-tile-render/index.js","assets/sprites/background.jpg","react-tile-render/map/Layer.jsx","react-tile-render/map/Object.jsx","App.js","reportWebVitals.js","index.js"],"names":["Sprite","image","data","children","onClick","hover","text","props","y","x","h","w","style","height","width","backgroundImage","backgroundRepeat","backgroundPosition","cursor","display","justifyContent","alignItems","boxSizing","className","GameObjects","spritesheet","tHeight","tWidth","Sprites","i","j","push","RenderObjects","top","left","together","Children","toArray","map","child","position","displayName","number","spriteSheet","ShowSprite","palette","tileSet","size","setActiveTile","zoom","tiles","id","row","border","zIndex","backgroundColor","margin","MozTransform","flexWrap","tile","Map","React","memo","activeTile","tileMap","background","addTile","origin","tileSize","worldSize","vTileSize","vWorldSize","vOrigin","useState","vSelected","setVSelected","vScreen","setVScreen","x1","y1","x2","y2","dimension","console","log","onMouseMove","e","bounds","currentTarget","getBoundingClientRect","mx","clientX","my","clientY","cx","parseInt","cy","ox","oy","newVSelected","Layer","useMemo","_childMap","forEach","_child","_cMap","find","c","toScreen","sprite","Object","App","mapSize","window","screen","toFixed","setZoom","useEffect","onresize","allObjects","setAllObjects","marginBottom","paddingTop","t","prev","old","existing","o","target","layers","a","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4ce05e64.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/2d.9b5d6335.png\";","import React from \"react\";\r\n// import m1 from \"./m1.png\";\r\n\r\nexport default function Sprite({\r\n  image,\r\n  data,\r\n  children,\r\n  onClick,\r\n  hover,\r\n  text,\r\n  ...props\r\n}) {\r\n  const { y, x, h, w } = data;\r\n  return (\r\n    <>\r\n      <div\r\n        style={{\r\n          height: `${h}px`,\r\n          width: `${w}px`,\r\n          backgroundImage: \"url(\" + image + \")\",\r\n          backgroundRepeat: \"no-repeat\",\r\n          backgroundPosition: `-${x}px -${y}px`,\r\n          cursor: \"pointer\",\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          boxSizing: \"border-box\",\r\n          ...props.style,\r\n        }}\r\n        onClick={onClick}\r\n        className={`${hover && \"sprite-hover\"}`}\r\n      >\r\n        {text && <p>{text}</p>}\r\n      </div>\r\n      {children}\r\n    </>\r\n  );\r\n}\r\n","import Sprite from \"../sprite/index\";\r\n// import frame from \"../assets/sprites/frame.png\";\r\nimport pallet from \"../../assets/sprites/pallet.png\";\r\n// import spritesheet from \"../../assets/img/2d.png\";\r\nimport React from \"react\";\r\n\r\nexport default function GameObjects(spritesheet, tHeight, tWidth) {\r\n  const Sprites = [];\r\n\r\n  for (let i = 0; i < 10 * tHeight; i = i + tHeight) {\r\n    for (let j = 0; j < 10 * tWidth; j = j + tWidth) {\r\n      Sprites.push((props) => (\r\n        <Sprite\r\n          image={spritesheet}\r\n          data={{ y: i, x: j, h: tHeight, w: tWidth }}\r\n          {...props}\r\n        />\r\n      ));\r\n    }\r\n  }\r\n\r\n  return Sprites;\r\n}\r\n","import React, { Children } from \"react\";\r\n\r\nfunction RenderObjects({ children, top, left, together, onClick }) {\r\n  return !together ? (\r\n    <div style={{ position: \"absolute\", top, left }} onClick={onClick}>\r\n      {children}\r\n    </div>\r\n  ) : (\r\n    Children.toArray(children).map((child, i) => {\r\n      return (\r\n        <div style={{ position: \"absolute\", top, left }} key={i}>\r\n          {child}\r\n        </div>\r\n      );\r\n    })\r\n  );\r\n}\r\n\r\nRenderObjects.displayName = \"RenderObjects\";\r\nexport default RenderObjects;\r\n","import React, { useMemo, useState, useEffect, useRef } from \"react\";\r\n\r\nimport GameObjects from \"../render/GameObjects\";\r\nimport RenderObjects from \"../render/RenderObjects\";\r\n\r\nexport function Sprite({\r\n  number,\r\n  spriteSheet,\r\n  height = 64,\r\n  width = 64,\r\n  ...props\r\n}) {\r\n  const ShowSprite = GameObjects(spriteSheet, height, width)[number];\r\n  return <ShowSprite {...props} />;\r\n}\r\n\r\nexport default React.memo(function Render({\r\n  activeTile,\r\n  tileMap,\r\n  image,\r\n  zoom = 1,\r\n  background,\r\n  children,\r\n  addTile,\r\n  onClick,\r\n  origin,\r\n  tileSize,\r\n  worldSize,\r\n}) {\r\n  const vTileSize = { ...tileSize };\r\n\r\n  const vWorldSize = { ...worldSize };\r\n  const vOrigin = { ...origin };\r\n\r\n  const toScreen = (x, y) => {\r\n    return {\r\n      x: vOrigin.x * vTileSize.x + (x - y) * (vTileSize.x / 2),\r\n      y: vOrigin.y * vTileSize.y + (x + y) * (vTileSize.y / 2),\r\n    };\r\n  };\r\n\r\n  // console.log(pWorld);\r\n  const [vSelected, setVSelected] = useState({ x: 0, y: 0 });\r\n  const [vScreen, setVScreen] = useState({ x: 0, y: 0 });\r\n\r\n  const position = function (x, y, x1, y1, x2, y2) {\r\n    return (x - x1) * (y2 - y1) - (y - y1) * (x2 - x1);\r\n  };\r\n\r\n  let dimension = {\r\n    x: vTileSize.x * vWorldSize.x,\r\n    y: vTileSize.y * vWorldSize.y,\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        boxSizing: \"border-box\",\r\n        position: \"relative\",\r\n        border: \"1px solid gray\",\r\n        backgroundImage: \"url(\" + background + \")\",\r\n        backgroundRepeat: \"no-repeat\",\r\n        width: dimension.x,\r\n        height: dimension.y + 64,\r\n        zoom: `${zoom * 100}%`,\r\n        MozTransform: `scale(${zoom})`,\r\n      }}\r\n      onClick={() => {\r\n        console.log(\"clicked\");\r\n        onClick({ x: vSelected.x, y: vSelected.y });\r\n      }}\r\n      onMouseMove={(e) => {\r\n        var bounds = e.currentTarget.getBoundingClientRect();\r\n        var mx = e.clientX / zoom - bounds.left;\r\n        var my = e.clientY / zoom - bounds.top;\r\n\r\n        let cx = parseInt(mx / vTileSize.x);\r\n        let cy = parseInt(my / vTileSize.y);\r\n\r\n        let ox = mx % vTileSize.x,\r\n          oy = my % vTileSize.y;\r\n\r\n        let vSelected = {\r\n            x: cy - vOrigin.y + (cx - vOrigin.x),\r\n            y: cy - vOrigin.y - (cx - vOrigin.x),\r\n          },\r\n          newVSelected = { x: vSelected.x, y: vSelected.y };\r\n        if (ox < vTileSize.x / 2 && oy < vTileSize.y / 2) {\r\n          if (position(ox, oy, vTileSize.x / 2, 0, 0, vTileSize.y / 2) < 0) {\r\n            newVSelected.x -= 1;\r\n          }\r\n        } else if (ox < vTileSize.x / 2 && oy > vTileSize.y / 2) {\r\n          if (\r\n            position(ox, oy, 0, vTileSize.y / 2, vTileSize.x / 2, vTileSize.y) <\r\n            0\r\n          ) {\r\n            newVSelected.y += 1;\r\n          }\r\n        } else if (ox > vTileSize.x / 2 && oy < vTileSize.y / 2) {\r\n          if (\r\n            position(ox, oy, vTileSize.x / 2, 0, vTileSize.x, vTileSize.y / 2) >\r\n            0\r\n          ) {\r\n            newVSelected.y -= 1;\r\n          }\r\n        } else if (ox > vTileSize.x / 2 && oy > vTileSize.y / 2) {\r\n          if (\r\n            position(\r\n              ox,\r\n              oy,\r\n              vTileSize.x / 2,\r\n              vTileSize.y,\r\n              vTileSize.x,\r\n              vTileSize.y / 2,\r\n            ) < 0\r\n          ) {\r\n            newVSelected.x += 1;\r\n          }\r\n        }\r\n\r\n        setVSelected(newVSelected);\r\n        setVScreen(toScreen(newVSelected.x, newVSelected.y));\r\n      }}\r\n    >\r\n      {children}\r\n\r\n      <RenderObjects\r\n        left={vScreen.x}\r\n        top={vScreen.y - vTileSize.y} //offsetting the size of tile\r\n\r\n        // top={vScreen.y - (activeTile?.height - vTileSize.y)}\r\n      >\r\n        <div className=\"sprite-hover-sheet\">\r\n          {activeTile && (\r\n            <Sprite\r\n              number={activeTile.tile}\r\n              spriteSheet={activeTile.spriteSheet}\r\n              onClick={() => {\r\n                addTile({\r\n                  x: vSelected.x,\r\n                  y: vSelected.y,\r\n                  image: activeTile.spriteSheet,\r\n                  tile: activeTile.tile,\r\n                  height: activeTile.height,\r\n                  width: activeTile.width,\r\n                });\r\n              }}\r\n              height={activeTile.height}\r\n              width={activeTile.width}\r\n            />\r\n          )}\r\n        </div>\r\n      </RenderObjects>\r\n    </div>\r\n  );\r\n});\r\n","import React from \"react\";\r\n\r\nimport GameObjects from \"../render/GameObjects\";\r\n\r\n// const { Bay, MetalFrame, Skid } = GameObjects();\r\n\r\n// const Bay = Objects[\"Bay\"];\r\n\r\nexport default function palette({\r\n  tileSet,\r\n  size,\r\n  setActiveTile,\r\n  zoom = 1,\r\n  tHeight,\r\n  tWidth,\r\n}) {\r\n  const Sprites = GameObjects(tileSet, tHeight, tWidth);\r\n  const { width, height } = size;\r\n  const tiles = [];\r\n  let id = 0;\r\n\r\n  for (let y = 0; y < height; y = y + tHeight / 2) {\r\n    const row = [];\r\n    for (let x = 0; x < width; x = x + tWidth / 2) {\r\n      row.push({\r\n        x,\r\n        y,\r\n        id: id++,\r\n      });\r\n    }\r\n    tiles.push(row);\r\n  }\r\n  return (\r\n    <div\r\n      id=\"palette\"\r\n      style={{\r\n        boxSizing: \"border-box\",\r\n        position: \"relative\",\r\n        border: \"1px solid black\",\r\n        zIndex: 100,\r\n        backgroundColor: \"white\",\r\n        margin: \"30px auto\",\r\n        zoom: `${zoom * 100}%`,\r\n        MozTransform: `scale(${zoom})`,\r\n      }}\r\n    >\r\n      <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n        {Sprites.map((Sprite, i) => {\r\n          return (\r\n            <Sprite\r\n              onClick={() => {\r\n                setActiveTile({\r\n                  tile: i,\r\n                  spriteSheet: tileSet,\r\n                  height: tHeight,\r\n                  width: tWidth,\r\n                });\r\n              }}\r\n              hover={true}\r\n              key={i}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import Map from \"./map/index\";\r\nimport Palette from \"./pallette\";\r\nimport RenderObjects from \"./render/RenderObjects\";\r\n\r\nexport default Map;\r\nexport { Palette, RenderObjects };\r\n","export default __webpack_public_path__ + \"static/media/background.3732d207.jpg\";","import { Sprite } from \".\";\r\nimport { RenderObjects } from \"..\";\r\nimport React, { useMemo } from \"react\";\r\n\r\n//A function to convert regular isometric coordinates to regular coordinates\r\nconst toScreen = (vOrigin, vTileSize, x, y) => {\r\n  return {\r\n    x: vOrigin.x * vTileSize.x + (x - y) * (vTileSize.x / 2),\r\n    y: vOrigin.y * vTileSize.y + (x + y) * (vTileSize.y / 2),\r\n  };\r\n};\r\n\r\nfunction Layer({ map, spriteSheet, tileSize, origin, worldSize, children }) {\r\n  const tiles = useMemo(() => {\r\n    let _childMap = [];\r\n    if (children) {\r\n      React.Children.forEach(children, (_child) => {\r\n        _childMap.push(_child.props);\r\n      });\r\n    }\r\n\r\n    let tiles = [];\r\n    for (let y = 0; y < worldSize.y; y++) {\r\n      for (let x = 0; x < worldSize.x; x++) {\r\n        let _cMap = _childMap.find((c) => c.x === x && c.y === y);\r\n        let position = toScreen(origin, tileSize, x, y);\r\n        if (_cMap) {\r\n          tiles.push({\r\n            x: position.x,\r\n            y: position.y - tileSize.y,\r\n            // top={vScreen.y - vTileSize.y}\r\n            sprite: _cMap.tile,\r\n            spriteSheet: _cMap.spriteSheet,\r\n          });\r\n        } else {\r\n          tiles.push({\r\n            x: position.x,\r\n            y: position.y - tileSize.y,\r\n            sprite: map[y * worldSize.x + x] - 1,\r\n            spriteSheet: spriteSheet,\r\n          });\r\n        }\r\n      }\r\n    }\r\n    return tiles;\r\n  }, [map, children]);\r\n\r\n  return tiles.map((tile, i) => {\r\n    return (\r\n      tile.sprite > 0 && (\r\n        <RenderObjects left={tile.x} top={tile.y} key={i}>\r\n          <div className=\"sprite-hover-sheet\">\r\n            <Sprite number={tile.sprite} spriteSheet={tile.spriteSheet} />\r\n          </div>\r\n        </RenderObjects>\r\n      )\r\n    );\r\n  });\r\n}\r\n\r\nexport default Layer;\r\n","function Object({ tileMap }) {}\r\nexport default Object;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport image1 from \"./assets/img/2d.png\";\r\nimport { Palette, RenderObjects } from \"./react-tile-render\";\r\nimport Render from \"./react-tile-render\";\r\nimport \"./assets/css/styles.css\";\r\nimport map2 from \"./untitled.json\";\r\nimport tileMap from \"./tileMap.json\";\r\nimport image from \"./assets/img/2d.png\";\r\nimport house from \"./assets/img/house.png\";\r\nimport background from \"./assets/sprites/background.jpg\";\r\nimport { Sprite } from \"./react-tile-render/map\";\r\nimport Layer from \"./react-tile-render/map/Layer\";\r\nimport Object from \"./react-tile-render/map/Object\";\r\n\r\nfunction App(props) {\r\n  const [activeTile, setActiveTile] = useState(null);\r\n  const [tiles, setTiles] = useState([]);\r\n  const [mapSize, setMapSize] = useState({\r\n    width: 1152,\r\n    height: 700,\r\n  });\r\n\r\n  const [zoom, setZoom] = useState((window.screen.width / 1600).toFixed(1));\r\n  useEffect(() => {\r\n    window.onresize = function () {\r\n      setZoom((window.screen.width / 1600).toFixed(1));\r\n    };\r\n  }, []);\r\n\r\n  const [allObjects, setAllObjects] = useState([]);\r\n\r\n  return (\r\n    <div className=\"content\" style={{ backgroundColor: \"#EDF5E1\" }}>\r\n      <div\r\n        style={{\r\n          position: \"relative\",\r\n          marginBottom: \"50px\",\r\n          paddingTop: \"50px\",\r\n          display: \"flex\",\r\n          justifyContent: \"space-around\",\r\n          width: \"100%\",\r\n          height: mapSize.height * zoom,\r\n        }}\r\n      >\r\n        <Render\r\n          activeTile={activeTile}\r\n          tileMap={tileMap}\r\n          tileSize={{ x: 64, y: 32 }}\r\n          origin={{ y: 1, x: tileMap.width / 2 }}\r\n          worldSize={{ x: tileMap.width, y: tileMap.height }}\r\n          image={image}\r\n          zoom={zoom}\r\n          background={background}\r\n          addTile={(t) => {\r\n            // console.log(t);\r\n            setAllObjects((prev) => {\r\n              let old = [...prev];\r\n              let existing = old.find((o) => o.x === t.x && o.y === t.y);\r\n              if (existing) {\r\n                existing.image = t.image;\r\n                existing.tile = t.tile;\r\n                return old;\r\n              }\r\n              return [\r\n                ...prev,\r\n                {\r\n                  x: t.x,\r\n                  y: t.y,\r\n                  tile: t.tile,\r\n                  image: t.image,\r\n                  height: t.height,\r\n                  width: t.width,\r\n                },\r\n              ];\r\n            });\r\n          }}\r\n          onClick={(target) => {\r\n            console.log(target);\r\n          }}\r\n        >\r\n          <Layer\r\n            map={tileMap.layers[0].data}\r\n            spriteSheet={image}\r\n            tileSize={{ x: 64, y: 32 }}\r\n            origin={{ x: 10, y: 1 }}\r\n            worldSize={{ x: tileMap.width, y: tileMap.height }}\r\n          />\r\n          <Layer\r\n            map={tileMap.layers[1].data}\r\n            spriteSheet={image}\r\n            tileSize={{ x: 64, y: 32 }}\r\n            origin={{ x: 10, y: 1 }}\r\n            worldSize={{ x: tileMap.width, y: tileMap.height }}\r\n          >\r\n            {allObjects.map((a, i) => {\r\n              return (\r\n                <Object\r\n                  x={a.x}\r\n                  y={a.y}\r\n                  tile={a.tile}\r\n                  spriteSheet={a.image}\r\n                  key={i}\r\n                  height={a.height}\r\n                  width={a.width}\r\n                />\r\n              );\r\n            })}\r\n          </Layer>\r\n        </Render>\r\n      </div>\r\n      {/* <div style={{ width: \"80%\", margin: \"50px auto\", height: 128 }}>\r\n        <Palette\r\n          tileSet={house}\r\n          setActiveTile={setActiveTile}\r\n          size={{ height: 128, width: 64 }}\r\n          zoom={zoom}\r\n          tWidth={64}\r\n          tHeight={128}\r\n        />\r\n      </div> */}\r\n      <div style={{ width: \"80%\", margin: \"50px auto\", height: 400 }}>\r\n        <Palette\r\n          tileSet={image}\r\n          setActiveTile={setActiveTile}\r\n          size={{ height: 64, width: 64 }}\r\n          zoom={zoom}\r\n          tWidth={64}\r\n          tHeight={64}\r\n        />\r\n      </div>\r\n    </div>\r\n    // </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}